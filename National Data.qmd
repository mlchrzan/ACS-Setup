---
title: "National Data"
author: "mlc"
format: html
editor: visual
---

# Set Up

```{r libraries, message=FALSE}
library(tidyverse) 
library(janitor) #clean_names()
library(beepr) #sound for knowing code is done

rm(list = ls()) #clear the environment
```

## Pull and Join National Data

```{r convert-txt-csv, message=FALSE, warning=FALSE}
# Read the .txt file
dp02 <- read_delim("./National Dist Data/2014-2018/all dist DP02 14-18.txt", 
                   col_names = T)

dp03 <- read_delim("./National Dist Data/2014-2018/all dist DP03 14-18.txt", 
                   col_names = T)

dp04 <- read_delim("./National Dist Data/2014-2018/all dist DP04 14-18.txt", 
                   col_names = T)

dp05 <- read_delim("./National Dist Data/2014-2018/all dist DP05 14-18.txt", 
                   col_names = T)

# Write the data to a .csv file
write_csv(dp02, "./National Dist Data/2014-2018/all dist conv DP02 14-18.csv")
write_csv(dp03, "./National Dist Data/2014-2018/all dist conv DP03 14-18.csv")
write_csv(dp04, "./National Dist Data/2014-2018/all dist conv DP04 14-18.csv")
write_csv(dp05, "./National Dist Data/2014-2018/all dist conv DP05 14-18.csv")
```

```{r load-data, message=FALSE}
# Load Estimates for the National Set of Districts
social <- read_csv("./National Dist Data/2014-2018/all dist conv DP02 14-18.csv")
econ <- read_csv("./National Dist Data/2014-2018/all dist conv DP03 14-18.csv")
housing <- read_csv("./National Dist Data/2014-2018/all dist conv DP04 14-18.csv")
demo <- read_csv("./National Dist Data/2014-2018/all dist conv DP05 14-18.csv")

# Load Variable Names
dp02 <- read_csv("./Data/2014-2018/dp02 layout 14-18.csv")
dp03 <- read_csv("./Data/2014-2018/dp03 layout 14-18.csv")
dp04 <- read_csv("./Data/2014-2018/dp04 layout 14-18.csv")
dp05 <- read_csv("./Data/2014-2018/dp05 layout 14-18.csv")

#J&A, ignore this -------------------------------------------
#varnames <- read_csv("./Data/2015-2019/varnames 15-19.csv")
#varnames <- read_csv("./Data/2016-2020/varnames 16-20.csv")
#varnames <- varnames |> select(-denominator)
```

```{r join-ACS-estimates}
all <- full_join(social, 
          housing, 
          by = join_by(GeoId, Geography, LEAID, Year, Iteration)) |> 
  full_join(econ, 
          by = join_by(GeoId, Geography, LEAID, Year, Iteration)) |> 
  full_join(demo, 
          by = join_by(GeoId, Geography, LEAID, Year, Iteration))

all
```

```{r join-varnames}
if(!exists("varnames")){
  varnames <- bind_rows(dp02, dp03, dp04, dp05) 
  
  varnames <- varnames |> 
    rename(varname = "Variable name", 
           vlabel = 'Description') |> 
    select(-Denominator) |> 
    filter(str_detect(varname, 'DP0'))
}

varnames
```

# Clean the Files

```{r clean-varnames}
varnames_clean <- varnames |> 
  mutate(value = 1) |> 
  pivot_wider(names_from = vlabel, 
              values_from = value) |> 
  clean_names() |> 
  pivot_longer(cols = -varname, 
               names_to = "label", 
               values_to = 'value') |>
  filter(value == 1) |> 
  select(-value) |> 
  mutate(label = str_replace(label, "number", "n"), 
         label = str_replace(label, "estimate", "est"),
         label = str_replace(label, "percent", "pct"),
         label = str_replace(label, "margin_of_error", "moe")) |> 
  filter(!str_detect(varname, "DP02PR"))

varnames_clean
```

```{r clean-and-pivot-acs-estimates, warning=FALSE}
all_long <- all |>
  mutate(across(starts_with("DP0"), 
                ~if_else(. %in% c('N', 
                                  '(X)', 
                                  '-', 
                                  '******', 
                                  '***', 
                                  '**'), 
                         NA, 
                         as.numeric(.)))) |>
  mutate(across(starts_with("DP0"), as.numeric)) |> 
  pivot_longer(cols = starts_with("DP0"),
               names_to = 'varname',
               values_to = 'values')

all_long
```

# Change Variable Names

```{r join-varnames}
all_varnames <- right_join(all_long, 
                           varnames_clean, 
                           by = join_by(varname)) 

all_varnames
```

```{r check-for-listed-but-not-collected-vars}
anti_join(all_varnames, all_long, 
          by = join_by(GeoId, Geography, LEAID, Year, Iteration, varname, values))

```

```{r remove-empty-rows}
#Remove any variables listed above by adding & varname != "{variable name}" for each variable listed above

all_varnames <- all_varnames |> 
  filter(varname != "DP05_86est" & 
           varname != "DP05_86moe")

all_varnames
```

```{r check-duplicate-varnames}
n_distinct(all_varnames$varname)
n_distinct(all_varnames$label)
#Indicates that there are 15 variables that have the same name

#Identifying the variables
dup_varnames <- all_varnames |>
  dplyr::summarise(n = n(), 
                   .by = c(GeoId, 
                           Geography, 
                           LEAID, 
                           Year,
                           label)) |>
  dplyr::filter(n > 1L)

dup_varnames <- unique(dup_varnames$label)

dup_varnames
```

```{r fix-duplicated-rows}
#Number of Rows with Duplicated variable names = 29,520 (/2 = 14,760) for 16-20
all_varnames |>
  dplyr::mutate(dups = n() - 1, 
                .by = c(GeoId, 
                        Geography, 
                        LEAID, 
                        Year,
                        label)) |> 
  filter(dups > 0)

#Summarizing over duplicated variable names (should lose 14,760 rows) for 16-20
test <- all_varnames |>
  dplyr::mutate(dups = n() - 1, 
                .by = c(GeoId, 
                        Geography, 
                        LEAID, 
                        Year,
                        label)) |>
  group_by(GeoId, 
           Geography, 
           LEAID, 
           Year,
           label, 
           dups) |>
  summarize(values = mean(values, na.rm = T), 
            .groups = 'keep') |> 
  ungroup()

#Check rows removed
nrow(all_varnames) - nrow(test)
#We do lose the correct number of rows!
##Also, note, the Iteration and varname columns are removed here as well!


#Check that the number of distinct labels hasn't changed
n_distinct(all_varnames$label) == n_distinct(test$label)


#Assign
all_varnames <- test |> select(-dups)
```

```{r pivot-wide}
all_final <- all_varnames |> 
  pivot_wider(names_from = label, 
              values_from = values) 

all_final
```

```{r prep-and-export}
all_final <- all_final |> 
  rename(agency_id = LEAID, 
         agency_name = Geography, 
         acs_est_span = Year) |>
  mutate(start_year = as.integer(str_extract(acs_est_span, "^\\d{4}")), 
         end_year = as.integer(str_extract(acs_est_span, "\\d{4}$")), 
         year = (start_year + end_year) %/% 2) |> 
  select(year, acs_est_span, agency_id, agency_name, everything())

all_final

write_csv(all_final, "./National Dist Data/2014-2018/acs_all_dist_14_18.csv")
beep(8)
```
